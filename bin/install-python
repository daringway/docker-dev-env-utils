#!/usr/bin/env bash

# Can install multiple python versions
# But the first install will set the pyenv global
# If latest is used, will install using apt-get, faster but not

# will install latest 
ENV_PYTHON_VERSION=${1:-pkg}

if [[ "$ENV_PYTHON_VERSION" == "pkg" ]]
then
   sudo apt-get install python
   exit $?
elif [[ "$ENV_PYTHON_VERSION" == "latest" ]]
then
   ENV_PYTHON_VERSION=3
fi

install-gcc

if [[ ! -d ~/.pyenv ]]
then
    curl https://pyenv.run | bash

echo '
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"' >> ~/.bashrc
echo "pyenv global ${ENV_PYTHON_VERSION}" >> ~/.bashrc
fi

. ~/.bashrc

# TODO, make this dynamic to use ${ENV_PYTHON_VERSION}:latest because local doesn't accept latest like install
pyenv install --skip-existing ${ENV_PYTHON_VERSION}

. ~/.bashrc